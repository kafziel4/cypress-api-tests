{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2024-04-27T03:41:44.765Z",
    "end": "2024-04-27T03:41:45.259Z",
    "duration": 494,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "66d4563d-ef36-4a87-b055-50f4e60d542b",
      "title": "",
      "fullFile": "cypress/e2e/login.cy.ts",
      "file": "cypress/e2e/login.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e3c57ca6-37ab-41e9-9baa-7108b988980d",
          "title": "ReqRes API Login endpoints",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "POST to /login with valid data should return status 200 and the login token",
              "fullTitle": "ReqRes API Login endpoints POST to /login with valid data should return status 200 and the login token",
              "timedOut": null,
              "duration": 235,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Arrange\nconst requestBody = {\n    email: 'eve.holt@reqres.in',\n    password: 'pistol',\n};\nconst expectedResponse = {\n    token: 'QpwL5tke4Pnpja7X4',\n};\n// Act\nrequests.postLogin(requestBody).should((response) => {\n    // Assert\n    expect(response.status).to.equal(200);\n    expect(response.headers[constants_1.headers.contentType]).to.equal(constants_1.jsonContentType);\n    expect(response.body).to.deep.equal(expectedResponse);\n});",
              "err": {},
              "uuid": "99db404e-7eee-4e18-949a-023e1c09e56d",
              "parentUUID": "e3c57ca6-37ab-41e9-9baa-7108b988980d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST to /login with missing password should return status 400 and the validation error",
              "fullTitle": "ReqRes API Login endpoints POST to /login with missing password should return status 400 and the validation error",
              "timedOut": null,
              "duration": 221,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Arrange\nconst requestBody = {\n    email: 'peter@klaven',\n};\nconst expectedResponse = {\n    error: constants_1.missingPassword,\n};\n// Act\nrequests.postLogin(requestBody).should((response) => {\n    // Assert\n    expect(response.status).to.equal(400);\n    expect(response.headers[constants_1.headers.contentType]).to.equal(constants_1.jsonContentType);\n    expect(response.body).to.deep.equal(expectedResponse);\n});",
              "err": {},
              "uuid": "145a1c6d-25ed-4e66-877c-b348517ecb70",
              "parentUUID": "e3c57ca6-37ab-41e9-9baa-7108b988980d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "99db404e-7eee-4e18-949a-023e1c09e56d",
            "145a1c6d-25ed-4e66-877c-b348517ecb70"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 456,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "reports/json",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}